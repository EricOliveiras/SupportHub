generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  fullName     String         @map("fullname")
  email        String         @unique
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  roleId       Int
  isActive     Boolean        @default(true)
  sectorId     Int?
  serviceOrder ServiceOrder[]
  Sector       Sector?        @relation(fields: [sectorId], references: [id])
  User_Role    User_Role[]

  @@map("user")
  @@index([email])
}

model Sector {
  id     Int            @id @default(autoincrement())
  name   String         @unique
  users  User[]
  orders ServiceOrder[]

  @@map("sector")
}

model ServiceOrder {
  id                 Int      @id @default(autoincrement())
  requester          String
  problemDescription String
  finished           Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userId             Int
  sectorId           Int?
  Sector             Sector?  @relation(fields: [sectorId], references: [id])
  user               User     @relation(fields: [userId], references: [id])

  @@map("service_order")
}

model Role {
  id              Int               @id @default(autoincrement())
  type            String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Permission_Role Permission_Role[]
  User_Role       User_Role[]

  @@map("role")
}

model Permission {
  id          Int               @id @default(autoincrement())
  name        String            @unique
  description String?
  created_at  DateTime          @default(now())
  Roles       Permission_Role[]

  @@map("permission")
}

model Permission_Role {
  role_id       Int
  permission_id Int
  Permission    Permission @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  Role          Role       @relation(fields: [role_id], references: [id], onDelete: Cascade)

  @@id([role_id, permission_id])
  @@map("permission_role")
}

model User_Role {
  user_id Int
  role_id Int
  Role    Role @relation(fields: [role_id], references: [id], onDelete: Cascade)
  User    User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@id([role_id, user_id])
  @@map("user_role")
}
